{"!!!Batch": {"type": "c", "code1": "!!!!!!!!!!!!!!!!!!!!!??!!!!!!!!!!!!!!!??!!!!!!??!!!!!!??!!!!!??!!!??!!!!!!!!??!!!!!!!!!!!!!!!??!!!!!!!!!!!!!!!!!!!!!!!!!!!!??!!!!!!!!+??!!!!!??!!!!!!!!!!!!??!!!!!!!!!!!!??!!!!!!!!!!!!!!!??!!!!!!!!!!!!!!!!!!!!!!!!!!!!??!!!!!!!!!!!!!!!!!!!!!!!+??!!!!!!!!!!!!!!!??!!!!!!!!!!!!!!!!!!??!!!!!!!!!!!!??!!!!??!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!??!!!!!!!!!!!!!!!!??!??!!!!!!!!!!!!!!!!!!!!!??!!!!!!!!!!!!!!!!!!!??!!!!!?", "charset": ["+", "!", "?"]}, "!!Fuck": {"type": "c", "code1": "!!!!#!!!!!!!!#!!!!!#!!!!!!!!!!!!#!!!!!!!!#!!!!!!!!!!!#!!!!!!#!!!!!!#!!!!!!#!!!!!!!!!!!!#!!!!!!!!!!!!#!!!!!!!!!!!!#!!!!!#!!!!!#!!!!!#!!!!!!!!#!!!!!!!!!!!!#!!!!!#!!!!!!!!#!!!!!!!!!!#!!!!!!!!#!!!!!!!!#!!!!!!!!#!!!!!!!!!!#!!!!!#!!!!!!!!!!#!!!!!!!!!!#!!!!!#!!!!!!!!!!#!!!!!!#!!!!!!#!!!!!!#!!!!!!#!!!!!!!!#!!!!!!!!!!#!!!!!!#!!!!!!!#!!!!!!!!!!#!!!!!#!!!!!#!!!!!#!!!!!#!!!!!#!!!!!!!!!!#!!!!!#!!!!!!!!!!#!!!!!!#!!!!!!#!!!!!!!!!!#!!!!!!#!!!!!!!!#!!!!!!!!!!#", "code2": "!!!!#!!!!!!!!#!!!!!#!!!!!!!!!!!!#!!!!!!!!#!!!!!!!!!!!#!!!!!!#!!!!!!#!!!!!!#!!!!!!!!!!!!#!!!!!!!!!!!!#!!!!!!!!!!!!#!!!!!#!!!!!#!!!!!#!!!!!!!!#!!!!!!!!!!!!#!!!!!#!!!!!!!!#!!!!!!!!!!#!!!!!!!!#!!!!!!!!#!!!!!!!!#!!!!!!!!!!#!!!!!#!!!!!!!!!!#!!!!!!!!!!#!!!!!#!!!!!!!!!!#!!!!!!#!!!!!!#!!!!!!#!!!!!!#!!!!!!!!#!!!!!!!!!!#!!!!!!#!!!!!!!#!!!!!!!!!!#!!!!!#!!!!!#!!!!!#!!!!!#!!!!!#!!!!!!!!!!#!!!!!#!!!!!!!!!!#!!!!!!#!!!!!!#!!!!!!!!!!#!!!!!!#!!!!!!!!#!!!!!!!!!!#", "charset": ["#", "!"]}, "HashHell": {"type": "c", "code1": "", "code2": "[_G]] = _G[_G][_G[_G[_G[_G]]]]end", "code3": " = _G[_G][_G[_G[_G[_G]]]]\t_G[_G][_G[_G]] = _G[_G][_G[_G[_G[_G]]]]endwhile _G[_G][_G[_G[_G]]] do\t_G[_G][_G][_G[_G]] = {}\t_G[_G][_G][_G[_G]][_G] = {}\t_G[_G][_G[_G[_G]]] = _G[_G][_G[_G[_G[_G]]]]end_G[_G][_G] = _G[_G][_G][_G[_G]]", "charset": ["=", "_", "[", "{", "h", "d", "\t", "w", "}", "G", "l", "i", "]", "o", "n", "e"]}, "(_\u0361\u00b0_\u035c\u0296_\u0361\u00b0)fuck": {"type": "c", "code1": "\u0361\u00b0)\u1565( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)) \u0361\u00b0)\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0((\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*) \u0361\u00b0)(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)) \u0361\u00b0)\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565(\u2665 \u035c\u0296\u2665)\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u2665 \u035c\u0296\u2665)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)(\u2665 \u035c\u0296\u2665)(\u2665 \u035c\u0296\u2665)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)(\u2665 \u035c\u0296\u2665)\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565(\u2665 \u035c\u0296\u2665)(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u2665 \u035c\u0296\u2665)(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*(\u2665 \u035c\u0296\u2665)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)(\u2665 \u035c\u0296\u2665)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u2665 \u035c\u0296\u2665)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565 \u035c\u0296(\u2229 \u0361\u00b0 \u035c\u0296 \u0361\u00b0)\u2283\u2501\u2606\uff9f.*)(\u2665 \u035c\u0296\u2665)\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)(\u2665 \u035c\u0296\u2665)\u1566( \u0361\u00b0\u30ee \u0361\u00b0)\u1565( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)( \u0361\u00b0 \u035c\u0296 \u0361\u00b0)(\u2665 \u035c\u0296\u2665)\u0ca0_\u0ca0", "charset": ["\u1565", "\u0361", "(", "*", "_", ")", "\u2665", "\u30ee", "\u2501", "\u00b0", "\u2283", ".", "\u2606", "\u035c", "\u0296", "\u1566", "\u0ca0", "\uff9f", "\u2229"]}, "(())": {"type": "c", "code1": "))(())))((((())((()())))((()()))))(((((()())))((()()))))((((()))))", "charset": [")", "("]}, "\uff5b\uff5d": {"type": "c", "code1": "", "charset": ["{", "}"]}, "Starfish": {"type": "c", "charset": []}, "++brainfuck++": {"type": "c", "code1": "", "charset": ["}", "<", "{", "p", ">", "c", "r", "n", "+", "."]}, ".Gertrude": {"type": "w", "code1": "Winged to be winged means that white is yellow and pieces pieces that arebrown are dust color if dust is washed off then it is choice that is to sayit is fitting cigarettes sooner than paper.A CARAFE THAT IS A BLIND GLASS.Suppose they are put together suppose that there is an interruptionsupposing that beginning again they are not changed as to position supposeall this and suppose that any five two of whom are not separating supposethat the five are not consumed.Cut more than any other and show it.He would have been peculiarly well fitted to give a truly scientificcharacter to metaphysical studies had it occurred to him to prepare thefield by a criticism of the organum that is of pure reason itself.The difference is spreading.A sight a whole sight and a little groan grinding makes a trimming such asweet singing trimming and a red thing not a round thing but a white thing ared thing and a white thing.A little called anything shows shudders.But an thought must directly or indirectly by means of certain signs relateultimately to intuitions; consequently with us to sensibility because in noother way can an object be given to us.Nickel what is nickel it is originally rid of a cover.Why is a pale white not paler than blue why is a connection made by a stovewhy is the example which is mentioned not shown to be the same why is thereno adjustment between the place and the separate attention.What is the sash like.\" But the category of substance when the conception of a body is broughtunder it determines that; and its empirical intuition in experience must becontemplated always as subject and never as mere predicate.The change in that is that red weakens an hour.But motion considered as the description of a space is a pure act of thesuccessive synthesis of the manifold in external intuition by means ofproductive imagination and belongs not only to geometry but even totranscendental philosophy.A widow in a wise veil and more garments shows that shadows are even.A plain hill one is not that which is not white and red and green a plainhill makes no sunshine it shows that without a disturber.We cannot cogitate a geometrical line without drawing it in thought nor acircle without describing it nor represent the three dimensions of spacewithout drawing three lines from the same point perpendicular to oneanother.There is no search.Principles a priori are so called not merely because they contain inthemselves the grounds of other judgements but also because they themselvesare not grounded in higher and more general cognitions.But there is there is that hope and that interpretation and sometime surelyany is unwelcome sometime there is breath and there will be a sinecure andcharming very charming is that clean and cleansing.A plan a hearty plan a compressed disease and no coffee not even a card or achange to incline each way a plan that has that excess and that break is theone that shows filling.Cutting shade cool spades and little last beds make violet violet when.It is very remarkable that we cannot perceive the possibility of a thingfrom the category alone but must always have an intuition by which to makeevident the objective reality of the pure conception of the understanding.There can be breakages in Japanese.A plan a hearty plan a compressed disease and no coffee not even a card or achange to incline each way a plan that has that excess and that break is theone that shows filling.Cutting shade cool spades and little last beds make violet violet when.Mathematical axioms (for example there can be only one straight line betweentwo points) are general a priori cognitions and are therefore rightlydenominated principles relatively to the cases which can be subsumed underthem.That is no color chosen.A plan a hearty plan a compressed disease and no coffee not even a card or achange to incline each way a plan that has that excess and that break is theone that shows filling.Cutting shade cool spades and little last beds make violet violet when.If we employ our reason not merely in the application of the principles ofthe understanding to objects of experience but venture with it beyond theseboundaries there arise certain sophistical propositions or theorems.It was chosen yesterday that showed spitting and perhaps washing andpolishing.A plan a hearty plan a compressed disease and no coffee not even a card or achange to incline each way a plan that has that excess and that break is theone that shows filling.Cutting shade cool spades and little last beds make violet violet when.As regards the second statement let us first take the opposite for granted-that the world is finite and limited in space; it follows that it must existin a void space which is not limited.The change of color is likely and a difference a very little difference isprepared.A plan a hearty plan a compressed disease and no coffee not even a card or achange to incline each way a plan that has that excess and that break is theone that shows filling.The lamp and the cake are not the only sign of stone.But if you do not take care at the outset or at least midway to make mengood you will never force them into an honest belief.The assertor of the all-sufficiency of nature in regard to causality(transcendental Physiocracy) in opposition to the doctrine of freedom woulddefend his view of the question somewhat in the following manner.Callous is something that hardening leaves behind what will be soft if thereis a genuine interest in there being present as many girls as men.We must seek the cause of our failure in our idea itself which is aninsoluble problem and in regard to which we obstinately assume that thereexists a real object corresponding and adequate to it.It shows that dirt is clean when there is a volume.A plan a hearty plan a compressed disease and no coffee not even a card or achange to incline each way a plan that has that excess and that break is theone that shows filling.The place was shown to be very like the last time.If we say of a thing that in relation to some other thing it is too large ortoo small the former is considered as existing for the sake of the latterand requiring to be adapted to it.A cushion has that cover.A plan a hearty plan a compressed disease and no coffee not even a card or achange to incline each way a plan that has that excess and that break is theone that shows filling.Choose the rate to pay and pet pet very much.But if you do not take care at the outset or at least midway to make mengood you will never force them into an honest belief.The principle of an unbroken connection between all events in the phenomenalworld in accordance with the unchangeable laws of nature is awell-established principle of transcendental analytic which admits of noexception.A circle of fine card board and a chance to see a tassel.But if you do not take care at the outset or at least midway to make mengood you will never force them into an honest belief.But still further removed than the idea from objective reality is the Idealby which term I understand the idea not in concreto but in individuo- as anindividual thing determinable or determined by the idea alone.The question does not come before there is a quotation.On the contrary this idea serves merely to indicate a certain unattainableperfection and rather limits the operations than by the presentation of newobjects extends the sphere of the understanding.In any kind of place there is a top to covering and it is a pleasure at anyrate there is some venturing in refusing to believe nonsense.A plan a hearty plan a compressed disease and no coffee not even a card or achange to incline each way a plan that has that excess and that break is theone that shows filling.A season in yellow sold extra strings makes lying places.But if you do not take care at the outset or at least midway to make mengood you will never force them into an honest belief.I answer: It is absurd to introduce- under whatever term disguised- into theconception of a thing which is to be cogitated solely in reference to itspossibility the conception of its existence.It shows what use there is in a whole piece if one uses it and it is extremeand very likely the little things could be dearer but in any case there is abargain and if there is the best thing to do is to take it away and wear itand then be reckless be reckless and resolved on returning gratitude.If the empirical law of causality is to conduct us to a Supreme Being thisbeing must belong to the chain of empirical objects- in which case it wouldbe like all phenomena itself conditioned.Certainly glittering is handsome and convincing.If we wish to divide this science from the universal point of view of ascience in general it ought to comprehend first a Doctrine of the Elementsand secondly a Doctrine of the Method of pure reason.Cold pails cold with joy no joy.The conceptions of reality substance causality nay even that of necessity inexistence have no significance out of the sphere of empirical cognition andcannot beyond that sphere determine any object.Is there not much more joy in a table and more chairs and very likelyroundness and a place to put them.There are however pure principles a priori which nevertheless I should notascribe to the pure understanding- for this reason that they are not derivedfrom pure conceptions but (although by the mediation of the understanding)from pure intuitions.Very likely there should not be a finer fancy present.Out of this sphere they are not properly conceptions but the mere marks orindices of conceptions which we may admit although they cannot without thehelp of experience help us to understand any subject or thing.A closet a closet does not connect under the bed.But our proof shows that external experience is properly immediate that onlyby virtue of it- not indeed the consciousness of our own existence butcertainly the determination of our existence in time that is internalexperience- is possible.Yet such really is the case here.But if you do not take care at the outset or at least midway to make mengood you will never force them into an honest belief.At the same time we may attribute to this being infinite perfection- aperfection which necessarily transcends that which our knowledge of theorder and design in the world authorize us to predicate of it.A sight a whole sight and a little groan grinding makes a trimming such asweet singing trimming and a red thing not a round thing but a white thing ared thing and a white thing.Masters in the science of mathematics are confident of the success of thismethod; indeed it is a common persuasion that it is capable of being appliedto any subject of human thought.Dirty is yellow.Where this unity of time is not to be met with as is the case with noumenathe whole use indeed the whole meaning of the categories is entirely lostfor even the possibility of things to correspond to the categories is inthis case incomprehensible.A woolen object gilded.If then in the speculative sphere of pure reason no dogmata are to be found;all dogmatical methods whether borrowed from mathematics or invented byphilosophical thinkers are alike inappropriate and inefficient.The three are on the table.A little monkey goes like a donkey that means to say that means to say thatmore sighs last goes.Yet such really is the case here.For such a hypothesis would introduce the principle of ignava ratio whichrequires us to give up the search for causes that might be discovered in thecourse of experience and to rest satisfied with a mere idea.A plan a hearty plan a compressed disease and no coffee not even a card or achange to incline each way a plan that has that excess and that break is theone that shows filling.A little monkey goes like a donkey that means to say that means to say thatmore sighs last goes.Yet such really is the case here.Mathematics natural science the common experience of men have a high valueas means for the most part to accidental ends- but at last also to thosewhich are necessary and essential to the existence of humanity.A SELTZER BOTTLE.A little monkey goes like a donkey that means to say that means to say thatmore sighs last goes.Light blue and the same red with purple makes a change.But if you do not take care at the outset or at least midway to make mengood you will never force them into an honest belief.Mathematics natural science the common experience of men have a high valueas means for the most part to accidental ends- but at last also to thosewhich are necessary and essential to the existence of humanity.A LONG DRESS.But if you do not take care at the outset or at least midway to make mengood you will never force them into an honest belief.Mathematics natural science the common experience of men have a high valueas means for the most part to accidental ends- but at last also to thosewhich are necessary and essential to the existence of humanity.It shows that there is no mistake.Mathematics natural science the common experience of men have a high valueas means for the most part to accidental ends- but at last also to thosewhich are necessary and essential to the existence of humanity.Some increase means a calamity and this is the best preparation for threeand more being together.A plan a hearty plan a compressed disease and no coffee not even a card or achange to incline each way a plan that has that excess and that break is theone that shows filling.A LITTLE CALLED PAULINE.But if you do not take care at the outset or at least midway to make mengood you will never force them into an honest belief.Mathematics natural science the common experience of men have a high valueas means for the most part to accidental ends- but at last also to thosewhich are necessary and essential to the existence of humanity.A little calm is so ordinary and in any case there is sweetness and some ofthat.Mathematics natural science the common experience of men have a high valueas means for the most part to accidental ends- but at last also to thosewhich are necessary and essential to the existence of humanity.A seal and matches and a swan and ivy and a suit.A little monkey goes like a donkey that means to say that means to say thatmore sighs last goes.Cutting shade cool spades and little last beds make violet violet when.But if you do not take care at the outset or at least midway to make mengood you will never force them into an honest belief.Mathematics natural science the common experience of men have a high valueas means for the most part to accidental ends- but at last also to thosewhich are necessary and essential to the existence of humanity.The band if it is white and black the band has a green string.Mathematics natural science the common experience of men have a high valueas means for the most part to accidental ends- but at last also to thosewhich are necessary and essential to the existence of humanity.The disgrace is not in carelessness nor even in sewing it comes out out ofthe way.A little monkey goes like a donkey that means to say that means to say thatmore sighs last goes.Yet such really is the case here.Mathematics natural science the common experience of men have a high valueas means for the most part to accidental ends- but at last also to thosewhich are necessary and essential to the existence of humanity.The sash is not like anything mustard it is not like a same thing that hasstripes it is not even more hurt than that it has a little top.A little monkey goes like a donkey that means to say that means to say thatmore sighs last goes.Yet such really is the case here.But if you do not take care at the outset or at least midway to make mengood you will never force them into an honest belief.Mathematics natural science the common experience of men have a high valueas means for the most part to accidental ends- but at last also to thosewhich are necessary and essential to the existence of humanity.A BOX.", "wordset": ["filling.Cutting", "world", "we", "external", "ratio", "places.But", "see", "disturber.We", "certain", "mediation", "part", "subsumed", "predicate", "this", "sold", "string.Mathematics", "yellow.Where", "shows", "intuitions;", "shudders.But", "filling.A", "ofthat.Mathematics", "THAT", "prepare", "whom", "oneanother.There", "makeevident", "metaphysical", "view", "unwelcome", "indeed", "ignava", "transcendental", "take", "former", "understand", "called", "one", "breakages", "GLASS.Suppose", "found;all", "Japanese.A", "large", "intuitions.Very", "(for", "occurred", "thismethod;", "pails", "concreto", "cognitions", "regard", "employ", "yellow", "thehelp", "noexception.A", "show", "and", "excess", "outset", "whole", "existence.It", "admit", "here.For", "intuition", "objects", "anindividual", "law", "act", "groan", "abargain", "Being", "the", "But", "authorize", "because", "when.As", "Supreme", "search.Principles", "calamity", "manner.Callous", "filling.Choose", "believe", "no", "rest", "fine", "appliedto", "DRESS.But", "humanity.The", "handsome", "any", "men", "ofproductive", "conception", "so", "andcharming", "thingfrom", "dogmatical", "least", "attention.What", "design", "SELTZER", "well", "before", "season", "lying", "sign", "piece", "behind", "mengood", "relateultimately", "space", "perpendicular", "mentioned", "beds", "makes", "motion", "rightlydenominated", "chosen", "breath", "beginning", "noother", "on", "Idealby", "sewing", "thesuccessive", "too", "threeand", "secondly", "whichrequires", "rate", "top", "only", "disease", "five", "sensibility", "indirectly", "cool", "theorder", "break", "shade", "not", "time", "difference", "pay", "whatever", "divide", "soft", "them", "that;", "contrary", "correspond", "essential", "when", "remarkable", "thisbeing", "cleansing.A", "it-", "knowledge", "with", "serves", "imagination", "Winged", "thinkers", "belief.I", "table.A", "philosophy.A", "further", "CARAFE", "answer:", "when.It", "accidental", "idea", "comprehend", "peculiarly", "sayit", "yesterday", "principle", "top.A", "purple", "humanity.It", "clean", "calm", "signs", "isprepared.A", "directly", "under", "as", "understanding-", "given", "swan", "it.It", "inthemselves", "void", "question", "it.A", "unchangeable", "up", "drawing", "causality", "pieces", "honest", "existin", "charming", "should", "winged", "thatmore", "LONG", "but", "dimensions", "theconception", "alike", "grounded", "object", "themselvesare", "tassel.But", "adapted", "mistake.Mathematics", "belief.The", "more", "mathematics", "reason", "off", "such", "failure", "thing", "round", "line", "truly", "satisfied", "adjustment", "would", "dirt", "place", "chairs", "goes.Light", "category", "even.A", "goes.Cutting", "woulddefend", "strings", "little", "considered", "comes", "infinite", "gilded.If", "existing", "merely", "thefield", "nickel", "organum", "cover.Why", "what", "properly", "I", "onlyby", "nay", "which", "search", "trimming", "human", "paper.A", "hurt", "case", "carelessness", "likelyroundness", "analytic", "inthis", "determines", "nor", "leaves", "existence", "description", "two", "force", "wish", "phenomenalworld", "perceive", "studies", "us", "thecourse", "extends", "individuo-", "when.But", "unity", "subject", "our", "a", "much.But", "make", "underthem.That", "here.Mathematics", "ared", "unattainableperfection", "butcertainly", "itspossibility", "theorems.It", "thing.Masters", "empirical", "you", "Elementsand", "phenomena", "own", "Doctrine", "that", "or", "when.Mathematical", "disgrace", "fitted", "manifold", "wise", "midway", "are", "had", "wouldbe", "spacewithout", "causality(transcendental", "admits", "inexistence", "humanity.A", "finite", "presentation", "noumenathe", "ought", "accordance", "ofthe", "fancy", "sometime", "conditioned.Certainly", "notascribe", "laws", "like.\"", "returning", "much", "success", "interpretation", "limited", "thought.Dirty", "out", "determination", "determined", "possible.Yet", "mere", "may", "determinable", "even", "cognitions.But", "understanding)from", "anything", "really", "could", "surelyany", "predicate.The", "describing", "introduce-", "closet", "discovered", "axioms", "his", "venturing", "here.But", "nonsense.A", "many", "assume", "nevertheless", "an", "natural", "have", "widow", "sunshine", "chosen.A", "first", "cold", "at", "together.A", "point", "causes", "broughtunder", "sake", "belong", "attribute", "also", "cake", "kind", "cigarettes", "pleasure", "disguised-", "aninsoluble", "rather", "dogmata", "it", "veil", "cause", "BOX.", "belongs", "marks", "why", "speculative", "hardening", "theseboundaries", "give", "itself", "methods", "requiring", "reckless", "put", "must", "interruptionsupposing", "granted-that", "him", "goes.Yet", "might", "sphere", "Method", "theone", "limits", "understanding.There", "necessary", "sophistical", "itself.The", "table", "judgements", "indicate", "determine", "three", "again", "assertor", "chain", "high", "conduct", "band", "anyrate", "understanding.In", "second", "awell-established", "reference", "between", "of", "use", "donkey", "PAULINE.But", "ivy", "very", "proof", "BLIND", "propositions", "its", "hearty", "problem", "uses", "humanity.Some", "way.A", "covering", "general", "card", "plain", "geometrical", "experience", "been", "cushion", "criticism", "filling.The", "change", "there", "invented", "if", "they", "LITTLE", "objective", "from", "paler", "borrowed", "derivedfrom", "together", "ascience", "cannot", "each", "sweetness", "straight", "resolved", "met", "time.If", "body", "best", "synthesis", "present", "perfection-", "sight", "orindices", "red", "significance", "pale", "shown", "priori", "unbroken", "all", "therefore", "ortoo", "dust", "thought", "spreading.A", "incline", "in", "to", "A", "will", "convincing.If", "cogitated", "separate", "last", "pure", "hasstripes", "shadows", "principles", "wear", "relatively", "monkey", "ordinary", "be", "quotation.On", "belief.Mathematics", "valueas", "it.He", "was", "without", "something", "conceptions", "men.We", "coffee", "green", "statement", "cover.A", "dearer", "stovewhy", "betweentwo", "represent", "spades", "seek", "itand", "consciousness", "idea.A", "necessity", "extremeand", "has", "position", "understanding", "fitting", "space;", "glittering", "substance", "thereexists", "objects-", "ends-", "always", "arise", "removed", "latterand", "when.If", "chance", "incomprehensible.A", "joy", "separating", "grinding", "does", "likely", "inefficient.The", "BOTTLE.A", "joy.The", "however", "reason.Cold", "immediate", "help", "board", "regards", "away", "somewhat", "rid", "blue", "present.Out", "finer", "bed.But", "arebrown", "do", "solely", "sighs", "means", "opposition", "nature", "whether", "acircle", "like", "sooner", "newobjects", "extra", "universal", "suit.A", "absurd", "still", "black", "lostfor", "capable", "higher", "care", "grounds", "freedom", "points)", "into", "limited.The", "them.There", "all-sufficiency", "Physiocracy)", "let", "goes", "preparation", "compressed", "entirely", "common", "byphilosophical", "becontemplated", "necessarily", "alone.The", "andcannot", "doctrine", "science", "aperfection", "persuasion", "connect", "contain", "internalexperience-", "then", "most", "opposite", "spitting", "possibility", "virtue", "hope", "volume.A", "circle", "perhaps", "pet", "IS", "originally", "stone.But", "relation", "other", "venture", "choice", "confident", "term", "things", "hypothesis", "some", "application", "genuine", "small", "than", "washing", "suppose", "consumed.Cut", "refusing", "thing.A", "achange", "thereno", "made", "white", "lines", "come", "totranscendental", "supposethat", "woolen", "plan", "andpolishing.A", "color", "sinecure", "singing", "beyond", "girls", "is", "never", "hill", "object.Is", "weakens", "categories", "introduce", "same", "real", "being", "It", "belief.But", "operations", "geometry", "cognition", "transcends", "supposeall", "alone", "corresponding", "us.Nickel", "connection", "by", "adequate", "garments", "reality", "scientificcharacter", "hour.But", "thereis", "washed", "gratitude.If", "mustard", "lamp", "change.But", "example", "for", "asweet", "changed", "say", "can", "(although", "meaning", "CALLED", "belief.At", "cogitate", "increase", "inappropriate", "showed", "following", "follows", "seal", "way", "events", "although", "matches", "obstinately", "interest", "cases", "sash", "thosewhich", "consequently", "plainhill", "violet"]}, ".mOdMoDwOrM": {"type": "c", "code1": "", "charset": ["$", "O", "2", "@", "3", "I"]}, ".yacuabll": {"type": "c", "code1": " ##}.#,######}.#,######}.#,#####:.#                   THIS SPACE FOR RENT}.#,###}.#,####:.#:.#}.#,###WORK:.#{.##,####b.##,##b.##,####:.##b.##,###>.##,####>.##,####>.##,#:.##:.#}.#,#AS##:.#>.#,######:.#>.#,####>.#,####:.#", "charset": ["D", "L", "T", "{", "O", "I", ">", "M", "Y", ":", "R", "K", "W", ".", "b", ",", "#", "F", "C", "}", "G", "S", "N", "E", "P", "H", "A"]}, "///": {"type": "c", "codecode2": "/\\/,\\\\,\\/.\\/\\/+\\\\+\\/=\\\\=.\\\\1-\\/\\/=\\\\=\\/+\\\\+\\//>*********", "code3": "///-/\\\\\\///0/1//1/*/++.1", "code4": "", "code5": "", "code6": "/**********************************", "charset": ["=", "D", "_", "*", "L", "I", ">", "V", "M", "0", ".", "\\", "#", ",", "C", "1", "!", "/", "-", "+", "X"]}, "/g\u0279\u0259\u028agu\u02d0/": {"type": "c", "code1": "", "code2": "", "charset": ["[", "<", "{", ",", "}", "!", "?", ";", "]", "-", "+"]}, "0(nop^)": {"type": "c", "code1": ")30($--94 43 42 53 50 61 48 36 48 27&17+!29^)25(36 27&17+!0`31^)21(22(22 0^)0 21&2-!24^)24(21&2-$#$1+@!$3&+#$@22&+4+!0=24\\-^)23(93 21&2-#22&+3+$@\\!1+$48\\!1+$94\\!1+$41\\!1+$50\\!1+$50\\!1+94\\!40 22&2+!91 22&3+!22^)3&#0=10*21+^", "charset": ["=", "7", "(", "*", "6", ")", "5", "^", "0", "9", "8", "2", ".", "`", "&", "\\", "4", "#", "3", "!", "1", "$", "-", "+", "|", "@"]}, "01-2C": {"type": "c", "code1": "", "charset": ["/", "1", "0"]}, "01": {"type": "c", "code1": "0100001010.", "code2": "00000100000011001000011000000110000001100010011000000110001001100010011000100110000001100000011000000110000001100000011000100110000001100010011000000101110011100000011000001100010001111010011000000110000001100010011000100110000001100000011000000110000011100000010000001100010001011100111000000110001011000100011110100110000001100000011000100110001001100000011000000110000001100010111000000100000011000100010111001110000010111110011110101011111001011100110010000111101.", "charset": ["=", "_", "q", "1", "l", "o", "h", "0", "d", "p", ".", "e", "b"]}, "0815": {"type": "c", "code1": "<:06:x-$x<:0e:x-$=x<:43:x-$", "code2": "", "code3": "", "code4": "x<:64:x~$~$$<:a:~$^:s:", "code5": "", "code6": "=<:72:>=>>=><:20:x<:6F:=<:6E:>=>=><:20:x<:74:=<:68:>=>=><:65:x<:20:=<:77:>=>=><:61:x<:6C:=>=>><:54:x<:61:=<:6B:>=>=><:65:x<:20:=<:6F:>=>=><:6E:x<:65:=<:20:>=>=><:64:x<:6F:=<:77:>=>=><:6E:x<:20:=<:61:>=>=><:6E:x<:64:=<:20:>=>=><:70:x<:61:=<:73:>=>=>><:20:x<:69:=<:74:>=>=><:20:x<:61:=<:72:>=>=><:6F:x<:75:=<:6E:>=>=><:64:~>}:_start:{~%><:1c:~}:_99:~{~$>=<:01:x-^:_99:<:0D:~$@:20:{~%><:10:~}:_98:~{~$>=<:01:x-^:_98:<:0D:~$@:c:<:20:~}:_97:~{~$>=<:01:x-^:_97:<:0D:~${x<:01:x->&==<:01:-#:_322:{~%><:1c:~}:_96:~{~$>=<:01:x-^:_96:<:d:~$$@:20:{~>&^:_start:}:_90:?<:4E:x<:6F:=<:20:>=>=><:6D:x<:6F:=<:72:>=>=><:65:x<:20:=<:62:>=>=><:6F:x<:74:=<:6C:>=>>=><:65:x<:73:=<:20:>=>=><:6F:x<:66:=<:20:>=>=><:62:x<:65:=<:72:>=>>=><:20:x<:6F:=<:6E:>=>=><:20:x<:74:=<:68:>=>=><:65:x<:20:=<:77:>=>=><:61:x<:6C:=>=>><:02:~}:_70:><:23:~}:_80:~{~$>=<:01:x-^:_80:{~<:01:=-#:_60:<:0D:~$$=^:_70:}:_60:<:0D:~$<:17:~}:_81:~{~$=<:01:x-^:_81:<:0D:~$?<:47:x<:6F:=<:20:>=>=><:74:x<:6F:=<:20:>=>=><:74:x<:68:=<:65:>=>=><:20:x<:73:=<:74:>=>=><:6F:x<:72:=<:65:>=>=><:20:x<:61:=<:6E:>=>=><:64:x<:20:=<:62:>=>=><:75:x<:79:=<:20:>=>=><:73:x<:6F:=<:6D:>=>=><:65:x<:20:=<:6D:>=>=><:6F:x<:72:=<:65:>=>=><:21:~}:_18:~{~$=<:01:x-^:_18:<:0D:~$<:63:x<:20:=<:62:>=>=><:6F:x<:74:=<:6C:>=>>=><:65:x<:73:=<:20:>=>=><:6F:x<:66:=<:20:>=>=><:62:x<:65:=<:72:>=>>=><:20:x<:6F:=<:6E:>=>=><:20:x<:74:=<:68:>=>=><:65:x<:20:=<:77:>=>=><:61:x<:6C:=>=>>{~%<:1c:~}:_21:~{~$=<:01:x-^:_21:<:0D:~$^:end:}:_322:?<:01:x<:20:=<:62:>=>=><:6F:x<:74:=<:6C:>=>>=><:65:x<:20:=<:6F:>=>=><:66:x<:20:=>=><:62:x<:65:=<:72:>=>>=><:20:x<:6F:=<:6E:>=>=><:20:x<:74:=<:68:>=>=><:65:x<:20:=<:77:>=>=><:61:x<:6C:=>=>><:54:x<:61:=<:6B:>=>=><:65:x<:20:=<:6F:>=>=><:6E:x<:65:=<:20:>=>=><:64:x<:6F:=<:77:>=>=><:6E:x<:20:=<:61:>=>=><:6E:x<:64:=<:20:>=>=><:70:x<:61:=<:73:>=>=>><:20:x<:69:=<:74:>=>=><:20:x<:61:=<:72:>=>=><:6F:x<:75:=<:6E:>=>=><:64:~>{~%><:1b:~}:_299:~{~$>=<:01:x-^:_299:<:0D:~$$@:20:{~%><:1b:~}:_298:~{~$>=<:01:x-^:_298:<:0D:~$@:20:{~%<:f:~}:_297:~{~$>=<:01:x-^:_297:<:0D:~$@:c:<:20:~}:_296:~{~$>=<:01:x-^:_296:<:0D:~${x<:01:x->&==<:01:-^:_90:", "charset": ["7", "^", "b", "&", "3", "!", "a", "i", "o", "-", "@", "=", "D", "_", "<", "6", "5", "0", "2", "4", "F", "}", "?", "r", "/", "E", "~", "{", "t", "+", "|", "e", "%", ">", ":", "f", "d", "9", "8", "C", "#", "x", "B", "s", "1", "c", "$", "n"]}, "0x29A": {"type": "c", "code1": "%~k~]\u00a0% k~\u00a0% > ->\u00a0% k%~ [ss+~~%~ ~%~k~]\u00a0% k~[ -> [] -> ]", "charset": ["-", "<", ",", "s", "+", "~", "]", "k", ">", ".", "%", "\u00a0", "["]}, "1+": {"type": "c", "code1": "11+\"*+; [ ]\"111++\"/*\\+; [W]\\\"; [o]111+++; [r](D)11+\"\"**++; [l]+; [d]11+\"\"\"\"****1+; [!]111++\"*1+; [\\n]", "code2": "", "code3": "", "code4": "", "code5": "", "code6": "", "code7": "1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+111+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+111+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+11+1+1+1+1+1+11+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+11+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+111+1+1+1+1+1+1+1+1+111+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+111+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+111+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+11+11+1+1+1+1+1+11+1+1+1+1+1+1+11+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+11+1+1+1+1+1+11+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+11+1+1+1+1+1+1+11+11+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+11+1+1+1+1+1+11+1+11+1+1+1+1+1+1+111+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+11+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+11+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+11+1+1+1+1+1+1+11+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+111+1+1+1+1+1+1+1+111+1+1+1+1+1+1+1+111+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+111+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+11+11+1+1+1+1+1+1+(|11+1<)\\(1|11+1+\"+1+\"*;)($|1+11#(1)11+1+\"+\"1+*1+;1#1+\"//\"\\^\\<11+*#()*+\\)(%|()#(1)($)\"1+1<#)\\(&|()#11+\"*\"*\"++;\\\"1+1<#)", "code8": "(\")(2)()(\")()(\")()()()(2)(\")()()()(2)()()(2)()(\")()()()()(2)(2)(\")()()()(2)()()(2)()(\")(2)()(\")(2)(\")()(\")()()()(2)(\")(2)(2)()(\")()(2)(\")()()()(2)()()(2)()(\")(\")()(\")()(\")()()()(2)()()(2)()(\")(2)()(2)()(2)(\")()(\")(2)(\")()()(2)()(\")()(2)(\")(2)(2)()()(\")()(2)(\")()(2)(\")(2)()(\")()()()()(2)(2)(\")()(2)(\")(\")(\")(2)()(\")(2)(\")()()(2)()(\")()(2)(\")()()()(2)(\")()(2)(\")()(2)(\")(\")(\")()()()(2)()()(2)()(\")(2)()(2)()(2)(\")()()()(2)()(\")(2)(\")(2)()(\")()()()()(2)(2)(\")()(2)(\")()()()(2)(\")()()()(2)(\")(2)()(\")(2)(\")()()(2)()(\")()()()(2)(\")(2)()(2)()(2)(\")(\")(2)(\")(2)()(\")()()(2)()(\")()(2)(\")()()()(2)(\")()()()(2)()()(2)()(\")()(2)(\")()()()(2)(\")(\")()(2)(\")(\")(2)()()(\")(\")()(2)(\")()()()(2)(\")()()()(2)(\")(2)()(2)()(2)(\")(2)(\")(2)()()(2)(\")(\")(#)@", "charset": [";", "@", "#", "<", "l", "%", "2", "\"", ")", ":", "]", "d", "&", "\\", "!", "(", "*", "|", "+", "/", "e", "[", ",", "W", "$", ".", "o", "^", "r", "D", "1", "n", "H"]}, "11CORTLANG": {"type": "c", "code1": "01101100", "code2": "", "charset": ["3", "0", "8", "4", "2", "1", "7"]}, "123": {"type": "c", "code1": "11211222222211121111211211222222211121111212222221112111121121122222221112111121222222111211111212112222222111211111222222111111222221111112222221111112222211111222222211211121111122222221121112111122222221112111112121122222221112111112222222111121121112112222222111121121122222211121111211211222222211121111212222221112112111211211222222211121121112122222112112112112111222222112112112112112", "charset": ["2", "1"]}, "129": {"type": "c", "code1": "", "code2": ")()))((((()))())(())))))((((()))())(()))", "charset": [")", "("]}, "1337": {"type": "c", "code1": "2,1,25,1,0,24,1,0,3,1,2,1,0,23,1,0,5,1,4,1,0,3,1,2,1,0,22,1,0,9,1,8,1,0,7,1,0,3,1,2,1,0,6,1,0,2,1,0,5,1,0,4,1,0,3,1,2,1,0,3,1,5,1,2,1,21,1,0,20,1,0,3,1,2,1,0,19,1,0,3,1,2,1,18,1,0,3,1,2,1,0,17,1,0,10,1,0,3,1,2,1,0,9,1,0,3,1,2,1,8,1,0,3,1,2,1,0,7,1,0,6,1,0,3,1,2,1,0,5,1,0,3,1,2,1,4,1,0,3,1,0,2,1,2,1,3,1,0,2,1,2,1,6,1,4,1,0,3,1,0,2,1,2,1,3,1,2,1,16,1,15,1,0,14,1,13,1,0,12,1,0,3,1,2,1,0,11,1,0,5,1,4,1,0,3,1,0,2,1,2,1,10,1,0,3,1,2,1,9,1,0,8,1,7,1,0,4,1,0,3,1,2,1,0,3,1,5,1,0,4,1,0,3,1,2,1,0,3,1,4,1,0,2,1,2,1,6,1,0,4,1,0,3,1,0,2,1,2,1,3,1,0,2,1,2,1,4,1,0,2,1,2,1,5,1,0,4,1,0,3,1,2,1,0,3,1,4,1,0,2,1,2,1,5,1,0,4,1,0,3,1,2,1,0,3,1,8,1,0,3,1,0,2,1,2,1,5,1,4,1,3,1,0,2,1,2,1,14,1,0,3,1,2,1,3,1,20,1,19,1,0,3,1,2,1,18,1,0,17,1,0,3,1,0,2,1,2,1,16,1,15,1,0,14,1,0,13,1,0,12,1,0,7,1,0,2,1,0,2,1,6,1,0,3,1,0,2,1,2,1,5,1,4,1,3,1,0,2,1,2,1,11,1,10,1,0,4,1,0,3,1,2,1,0,3,1,4,1,0,2,1,2,1,6,1,0,4,1,0,3,1,2,1,0,3,1,5,1,0,4,1,0,3,1,2,1,0,3,1,4,1,0,2,1,2,1,9,1,0,8,1,7,1,0,6,1,0,3,1,0,2,1,2,1,5,1,4,1,3,1,0,2,1,2,1,8,1,9,1,2,1,12,1,2,1,13,1,0,10,1,0,3,1,2,1,0,9,1,0,5,1,4,1,0,3,1,0,2,1,2,1,8,1,0,3,1,2,1,7,1,0,6,1,5,1,0,4,1,0,3,1,2,1,0,3,1,6,1,0,3,1,0,2,1,2,1,3,1,2,1,10,1,5,1,4,1,3,1,0,2,1,2,1,14,1,0,7,1,0,3,1,2,1,0,6,1,0,5,1,4,1,0,3,1,0,2,1,2,1,5,1,0,2,1,0,4,1,0,3,1,0,2,1,2,1,4,1,2,1,8,1,0,3,1,2,1,7,1,0,6,1,5,1,0,4,1,0,3,1,2,1,0,3,1,6,1,0,3,1,0,2,1,2,1,5,1,4,1,3,1,0,2,1,2,1,17,1,5,1,4,1,3,1,0,2,1,2,1,24,1,4,1,3,1,0,2,1,2,1,27,1,0,3,1,0,2,1,2,1,3,1,2,1,30,1,0,15,1,14,1,0,13,1,12,1,0,11,1,10,1,0,9,1,0,3,1,0,2,1,2,1,8,1,7,1,0,6,1,5,1,0,4,1,0,3,1,2,1,0,3,1,4,1,0,2,1,2,1,6,1,0,4,1,0,3,1,0,2,1,2,1,3,1,0,2,1,2,1,4,1,0,2,1,2,1,5,1,0,4,1,0,3,1,2,1,0,3,1,4,1,0,2,1,2,1,11,1,15,1,0,6,1,0,3,1,2,1,0,5,1,0,3,1,2,1,4,1,0,3,1,0,2,1,2,1,3,1,0,2,1,2,1,7,1,6,1,0,3,1,0,2,1,2,1,5,1,4,1,3,1,0,2,1,2,1,31,1,0,3,1,0,2,1,2,1,3,1,0,2,1,2,1,28,1,0,15,1,14,1,0,13,1,0,3,1,2,1,0,12,1,0,7,1,6,1,0,5,1,0,4,1,0,3,1,0,2,1,2,1,3,1,2,1,4,1,3,1,0,2,1,2,1,11,1,0,2,1,0,10,1,0,9,1,0,3,1,2,1,0,8,1,0,3,1,2,1,7,1,0,3,1,2,1,0,6,1,0,5,1,4,1,0,3,1,0,2,1,2,1,5,1,10,1,2,1,27,1,0,10,1,0,3,1,2,1,0,9,1,0,5,1,4,1,0,3,1,2,1,0,8,1,0,5,1,4,1,0,3,1,2,1,7,1,0,6,1,0,3,1,2,1,0,5,1,0,3,1,2,1,4,1,0,3,1,0,2,1,2,1,3,1,0,2,1,2,1,6,1,5,1,0,4,1,0,3,1,2,1,0,3,1,26,1,25,1,0,24,1,0,3,1,2,1,0,23,1,0,7,1,6,1,0,5,1,0,4,1,0,3,1,0,2,1,2,1,3,1,2,1,4,1,3,1,0,2,1,2,1,22,1,0,3,1,2,1,21,1,0,20,1,19,1,0,3,1,0,2,1,2,1,3,1,0,2,1,2,1,18,1,0,17,1,16,1,0,15,1,0,3,1,2,1,0,14,1,0,13,1,12,1,0,11,1,10,1,0,9,1,0,3,1,2,1,0,8,1,0,3,1,2,1,7,1,0,3,1,2,1,0,6,1,0,5,1,4,1,0,3,1,0,2,1,2,1,5,1,9,1,2,1,13,1,0,8,1,0,3,1,2,1,0,7,1,0,3,1,2,1,6,1,0,5,1,4,1,0,3,1,0,2,1,2,1,3,1,2,1,5,1,0,3,1,0,2,1,2,1,3,1,2,1,8,1,4,1,0,3,1,0,2,1,2,1,3,1,2,1,17,1,0,11,1,0,3,1,2,1,0,10,1,0,5,1,4,1,0,3,1,2,1,0,9,1,0,5,1,4,1,0,3,1,2,1,8,1,0,6,1,0,3,1,2,1,0,5,1,0,3,1,2,1,4,1,0,3,1,0,2,1,2,1,3,1,0,2,1,2,1,7,1,6,1,0,3,1,0,2,1,2,1,5,1,4,1,3,1,0,2,1,2,1,11,1,7,1,6,1,0,3,1,0,2,1,2,1,5,1,4,1,3,1,0,2,1,2,1,20,1,0,5,1,4,1,0,3,1,0,2,1,2,1,3,1,0,2,1,2,1,15,1,0,9,1,8,1,0,7,1,6,1,0,3,1,0,2,1,2,1,5,1,4,1,3,1,0,2,1,2,1,14,1,0,13,1,0,3,1,2,1,0,12,1,0,3,1,2,1,11,1,0,3,1,0,2,1,2,1,10,1,9,1,0,8,1,7,1,0,6,1,0,3,1,0,2,1,2,1,5,1,4,1,3,1,0,2,1,2,1,8,1,13,1,7,1,0,6,1,5,1,0,4,1,0,3,1,0,2,1,2,1,3,1,2,1,6,1,0,3,1,2,1,4,1,0,3,1,0,2,1,2,1,3,1,0,2,1,2,1,24,1,6,1,0,3,1,0,2,1,2,1,5,1,4,1,3,1,0,2,1,2,1,28,1,0,4,1,0,3,1,2,1,0,3,1,4,1,0,2,1,2,1,28,1,0,3,1,0,2,1,2,1,3,1,0,2,1,2,1,11,1,0,10,1,9,1,0,8,1,7,1,0,6,1,0,3,1,0,2,1,2,1,5,1,4,1,3,1,0,2,1,2,1,8,1,10,1,0,3,1,0,2,1,2,1,3,1,0,2,1,2,1]", "charset": ["9", "5", "3", ",", "0", "6", "1", "8", "]", "4", "2", "[", "7"]}, "1=0": {"type": "c", "code1": "", "code2": "6/=55587}88837={  55586%=55587}905050=88800905050+=55588:55586", "code3": "", "charset": [";", "-", "*", "9", "+", "/", "6", "1", "}", "%", "4", "2", "7", "!", "{", "5", "0", ":", "8", "3", "?", "="]}, "1argasm": {"type": "c", "code1": "", "charset": ["@", "-", "#", "<", "+", "?", "f", "2", "3", ":", "$", "b", "z", "^", "1", "i"]}, "2-ill": {"type": "c", "code1": "", "code2": "", "code3": "", "code4": "", "charset": ["@", "-", "#", "|", "A", "$", "'", "?"]}, "2/9_of_an_esolang": {"type": "c", "code1": "", "charset": ["@", "#", "Q", "4", "\u0088", "6"]}, "2050706": {"type": "c", "code1": "", "charset": ["0", "3", "5", "1"]}, "256": {"type": "c", "code1": "", "code2": "", "code3": "", "code4": "", "code5": "", "charset": [";", "-", "9", "<", "+", "6", "e", "2", "h", "5", "0", ">", "z", "^", "1", "i", "="]}, "2D-Reverse": {"type": "c", "code1": "", "code2": "", "code3": "", "charset": ["@", "*", "+", "/", "2", "s", "X", "x", "$", ".", "\\", "1", "="]}, "2DFuck": {"type": "c", "code1": "..!.!....!.!...!..!.!..!..!.!..!...!..!..!.!....!.!....!.", "code2": "", "code3": ".>r.>r.^r![<r!]!v>rx,x>rx,x>rx,x>rx,x>rx,x>rx,x>rx,x>rx,x^r![<r!]!vx>>>>>>>>r![<r!]^r!]v!x^", "charset": ["<", "[", "v", "x", ",", "]", ">", ".", "^", "r", "!"]}, "2DP": {"type": "w", "code1": "00 NOP Does nothing. The default config for all tiles.01 LT Turns left once. IE: N to NW.02 RT Turns right once.03 LT 2 Turns left twice. IE: N to W.04 RT 2 Turns right twice.05 LT 3 Turns left 3 times. IE: N to SW.06 RT 3 Turns right 3 times.07 REV Reverses the heads position. IE: N to S.08 TRL #1 Sets the trail to #2. From now on, it will replace any tiles it goes over with this value.09 TOFF Disables the trail.0A JROW #2 Sets the heads row to #2.0B JCOL #2 Sets the heads colunm to #2.0C JP #2,#3 Jumps to row #2, col #3.0D MOVE #2 moves forward #2 spaces0E ADD #2,#3 Adds #2 and #3, and stores the value at #2's position.0F SUB #2,#3 Subtracts #2 and #3, and stores the value at #2's position.10 SET #2,#3 Sets the space #2 paces away from it to #3.11 HALT Stops the movement of the head until a START command is under it.12 AND #2,#3 Logical ANDs #2 and #3, and stores the value at #2's position.13 OR #2,#3 Logical ORs #2 and #3, and stores the value at #2's position.14 XOR #2,#3 Logical XORs #2 and #3, and stores the value at #2's position.15 NOT #2 Logical NOTs #2.16 COPY #2,#3 Copy the value #2 paces away form it, and store it #3 paces away from it.17 NEWHD #2 Generates a new head #2 paces away form it.18 SAVE #2 Stores the value #2 paces away from it into VAL.19 LOAD #2 puts VAL #2 spaces away from it.1A EXEC Executes the command in VAL.1B SVAL #2 stores #2 into VAL.1C LDADD #2 adds VAL and #2, and stores it in VAL.1D LDSUB #2 Subtracts VAL and #2, and stores it in VAL.1E LDJR Jumps to the row pointed to by VAL.1F LDJC Jumps to the colunm pointed to by VAL.20 LDAND #2 Logicl ANDs VAL and #2, and stores it in VAL.21 LDOR #2 Logicl ORs VAL and #2, and stores it in VAL.22 LDXOR #2 Logicl XORs VAL and #2, and stores it in VAL.23 LDNOT Logical NOT's VAL.24 CP #225 SROW Saves the row into VAL.26 SCOL Saves the colunm into VAL27 IF #2,#3 If #2 is equal to VAL, jump #3 paces forward.28 SHD ON Turns SHD on. When it is on, it gives VAL to newly created heads.29 SHD OFF Turns SHD off.2A DELHD Deletes the head.2B DIR N the DIR commands make the head move in the argument's direction.2C DIR NE2D DIR E2E DIR SE2F DIR S30 DIR SW31 DIR W32 DIR NW33 INC #2 Increments the tile #2 paces away.34 DEC #2 Decrements the tile #2 paces away.35 LDINC Increments VAL.36 LDDEC Decrements VAL.37 LDMOV Moves forward VAL paces.38 BACK #2 Moves backwards #2 paces.39 LDBACK Moves backwards VAL paces.3A RAND #2 Puts a random value #2 paces away.3B LDROW #23C LDCOL #23D SPOS #2#3 Sets the position to #2 and #3.3E HDAT #2#3 Sets VAL to 1 if there is a head at the position #2#3, 0 otherwise.3F SHFT #240 LDSHFT41 LDTRL Sets the trail to VAL.42 START Starts a halted head.43 SAT #2#344 LDAT #2#345 LTIF #2 turns 2 left if #2 is not 0.46 RTIF #2 turns 2 right if #2 is not 0.47 LTIFLD turns 2 left if VAL is not 0.48 RTIFLD turns 2 right if VAL is not 0.49 COLR #2 Sets the color trail to #2.4A COLR OFF Disables the color trail.4B SETCOLR #2 Sets the color #2 paces away from it to VAL.4C LDCOLR Sets the color trail to VAL.4D GETCOLR #2 Loads the color #2 paces away from it.", "code2": "X nn Y nn DIR dd VAL nn [HALTED]", "code3": "HEADS (head definitions here)TILES (Tile words here)", "wordset": ["any", "DIR", "EXEC", "#2.0C", "is", "in", "00", "RAND", "paces.38", "times.", "LDBACK", "heads", "SVAL", "VAL.1E", "JROW", "trail", "at", "position", "NEWHD", "Saves", "until", "VAL.22", "If", "there", "Does", "position.0F", "it.17", "Increments", "LDAT", "replace", "TOFF", "#240", "nothing.", "VAL.24", "not", "Puts", "Starts", "this", "VAL.19", "AND", "SW.06", "paces.39", "goes", "tiles.01", "VAL,", "trail.0A", "#3.3E", "Copy", "off.2A", "Deletes", "SROW", "VAL.1C", "it", "#1", "stores", "gives", "adds", "store", "NOTs", "pointed", "3", "forward", "forward.28", "over", "VAL.36", "1", "away.3B", "new", "E2E", "VAL.4C", "SAT", "LOAD", "paces.3A", "tiles", "LDSUB", "Stores", "SW31", "#3.11", "Subtracts", "it.", "heads.29", "#2's", "DELHD", "color", "0.46", "VAL27", "VAL.42", "puts", "REV", "BACK", "LDDEC", "move", "DEC", "START", "it.1A", "CP", "#23D", "NOT", "LDMOV", "Turns", "ANDs", "INC", "tile", "head.43", "0.49", "SUB", "right", "paces", "2", "HEADS", "argument's", "[HALTED]", "#2", "RT", "NE2D", "on.", "value", "Logicl", "Y", "twice.05", "newly", "Disables", "VAL.26", "#2#3", "VAL.1D", "RTIFLD", "SPOS", "HDAT", "COPY", "Moves", "VAL.37", "commands", "backwards", "random", "LDADD", "the", "SHD", "Decrements", "LDOR", "spaces0E", "position.13", "it,", "by", "VAL.20", "Stops", "LDXOR", "position.10", "LDSHFT41", "of", "XOR", "When", "moves", "GETCOLR", "S.08", "if", "position.", "#2#344", "The", "NOT's", "VAL.1F", "SE2F", "ON", "#3.0D", "twice.", "command", "W.04", "SETCOLR", "From", "Generates", "movement", "away.35", "SCOL", "#2#3,", "colunm", "#2#345", "will", "#3,", "head", "X", "Executes", "IF", "JP", "Reverses", "dd", "on,", "W32", "with", "Logical", "jump", "LDJR", "into", "LDCOL", "LDTRL", "under", "row", "TRL", "#3", "VAL.21", "words", "once.03", "LDINC", "default", "from", "NW.02", "NOP", "LTIFLD", "LDROW", "value.09", "nn", "ORs", "for", "SHFT", "created", "LDAND", "NW33", "#2.16", "MOVE", "head.2B", "make", "otherwise.3F", "a", "#2.4A", "here)", "VAL.1B", "0.48", "(Tile", "LTIF", "#2,", "N", "LDJC", "and", "all", "away", "once.", "(head", "position.14", "VAL.4D", "position.15", "#2.0B", "#2,#3", "space", "Adds", "RTIF", "times.07", "direction.2C", "halted", "spaces", "Jumps", "now", "LT", "it.12", "equal", "form", "ADD", "LDNOT", "OFF", "LDCOLR", "COLR", "SET", "away.34", "it.18", "JCOL", "definitions", "#23C", "to", "turns", "HALT", "trail.4B", "0.47", "Loads", "#2.", "OR", "0", "Sets", "col", "left", "SAVE", "VAL", "VAL.23", "config", "here)TILES", "#225", "IE:", "XORs", "S30"]}, "2iota": {"type": "w", "code1": "event Oscillator goes High, causes Oscillator goes Low after 0.5 s;event Oscillator goes Low, causes Oscillator goes High after 0.5 s.", "code2": "alphabet DominoNumber,    One, Two, Three, Four, Five, Six, Seven;event Begin,    causes Domino One Falls;event Domino (N = DominoNumber+) Falls,    causes Domino (succ N) Falls.", "wordset": ["(succ", "DominoNumber+)", "Two,", "One", "goes", "Seven;event", "N)", "Low,", "alphabet", "causes", "Low", "Begin,", "Five,", "DominoNumber,", "(N", "after", "s;event", "One,", "High", "Falls.", "High,", "s.", "Falls,", "Oscillator", "Falls;event", "Three,", "0.5", "Six,", "event", "Four,", "Domino", "="]}, "2L": {"type": "c", "code1": "", "charset": ["+", "*"]}, "3D": {"type": "w", "code1": "RIGHT   ADD     0       1       INT     DOWNUP              16      0       INT     LEFT", "code2": "OUTPUT  \"Hello world    END     prints \"Hello World\" on screen", "code3": "DOWN    The program used by the author for testing his interpreter.INT     It writes the numbers 1-10 on screen and exits.0       (Note the suspended addition)10RIGHT   ADD             1               IFLAR   DOWN    ENDUP      1       INT     OUTPUT          1       LEFT", "code4": "OUTPUT  IFRND   DOWN    DOWNDOWN            LEFT    IFRNDIFRND                   RIGHT   IFRND   DOWN    DOWNRIGHT   DOWN0       1       2       4       5       6       7END     END     END     END     END     END     END", "wordset": ["program", "INT", "testing", "author", "(Note", "used", "7END", "IFRNDIFRND", "6", "4", "IFRND", "2", "It", "END", "ADD", "writes", "prints", "the", "5", "exits.0", "numbers", "and", "addition)10RIGHT", "by", "DOWN0", "16", "suspended", "1-10", "DOWNUP", "screen", "DOWN", "on", "The", "LEFT", "0", "interpreter.INT", "RIGHT", "OUTPUT", "his", "world", "\"Hello", "World\"", "for", "IFLAR", "ENDUP", "DOWNDOWN", "DOWNRIGHT", "1"]}, "3x": {"type": "c", "code1": "", "code2": "", "charset": [")", "!", "#", "v", "x", "3", "W", "l", "]", "e", "d", "o", "^", "r", "[", "?", "(", "H"]}, "4": {"type": "c", "code1": "75115125105085044", "code2": "", "code3": "", "charset": ["9", "6", "4", "2", "7", "5", "3", "0", "8", ".", "1"]}, "4RL": {"type": "c", "code1": "4Ee44E", "charset": ["l", "e", "E", "4", "r", "L", "a"]}, "5D_Brainfuck_With_Multiverse_Time_Travel": {"type": "c", "code1": "", "code2": "", "charset": [")", "-", ",", "+", "]", ".", "^", "[", "("]}, "6969_Assembler": {"type": "w", "code1": "; Output text \"xyz\"MOV C*::xyz>>> xyz", "code2": "; Define stringDFS My cool text!; Output text xMOV C*::%s>>> My cool text!", "code3": "; Create 5 memory slotsMEM 5; Define stringDFS My cool text!; put \"My cool text!\" into memory slot 2MOV M*[2]::%s; Output memory slot 2MOV C*::M*[2]>>> My cool text!", "code4": "; Write the text from memory slot 1 into myfile.txtFLW M*[1]::myfile.txt; Write the text from %s into the file called [output of memory slot 2]FLW %s::M*[2]; Write the text \"mycooltext\" into the file called [output of %s]FLW mycooltext::%s", "code5": "; Read file called (output of memory slot 1) into memory slot 2FLR M*[1]::M*[2]; Read file called myfile.txt into %sFLR myfile.txt::%s", "code6": "; Pushes the value of %s into memory position 2 MOV M*[2]::%s", "code7": "; Pushes hello into memory position 2 MOV M*[2]::hello; Copies the value of memory slot 3 to memory slot 2MOV M*[2]::M*[3]", "code8": "; Outputs the value of %sMOV C*::%s", "code9": "; Outputs helloMOV C*::hello; Outputs the value of memory slot 3MOV C*::M*[3]", "code10": "1 |\u00a0; Outputs \"hi\\n\"2 | MOV C*::hi^n3 | JMP 24 |\u00a0; Jump to line 2 forever", "code11": "1 |\u00a0; Create a pointer called \"mystart\"2 | PNT mystart3 |\u00a0; Outputs \"hi\\n\"4 | MOV C*::hi^n5 | JMP mystart6 |\u00a0; Jump to pointer \"mystart\" forever", "code12": "; if %s==%? (str = user-input); True: %i = 1; False: %i = 0CMP %s=%?; Jump to mypointer if %i == 1JMP ?mypointer", "code13": "; If the user-input (%?) is equal to %s (an unknown string), %i = 1, else %i = 0CMP %s=%?", "code14": "; Move Hello,_World! to C* (output)MOV C*::Hello,_World!>>> Hello,_World!", "code15": "; Move Hello, World! to %sDFS Hello, World!MOV C*::%s>>> Hello, World!", "code16": "; Create 10 memory slotsMEM 10; Move Hello, World! to %sDFS Hello, World!; Move %s to memory slot 4MOV M*[4]::%s; Output memory slot 4MOV C*::M*[4]>>> Hello, World!", "code17": "; Take user input (%i) and move it into C* (console output)MOV C*::%i", "code18": "; Move \"Hello, World!\\n\" into %sDFS Hello, World^n; Set pointer \"loop\"PNT loop; Output %sMOV C*::%s; Jump to pointer \"loop\"JMP loop", "wordset": [";", "Define", "1JMP", "C*::M*[3]", "myfile.txt", "is", "1,", "False:", "24", "the", "M*[1]::myfile.txt;", "%s::M*[2];", "loop", "user-input);", "Write", "%sDFS", "cool", "memory", "My", "position", "If", "of", "World!\\n\"", "hello", "?mypointer", "if", "user-input", "Move", "World!;", "%s==%?", "text", "\"hi\\n\"2", "C*::hi^n3", "M*[4]::%s;", "loop;", "line", "slot", "World!", "(an", "MOV", "myfile.txt::%s", "M*[2]::M*[3]", "\"Hello,", "2FLR", "C*::hi^n5", "Set", "file", "%s", "mystart3", "mystart6", "M*[2]::hello;", "forever", "Hello,_World!", "it", "into", "\"mycooltext\"", "else", "1;", "mycooltext::%s", "C*::%s", "string),", "4MOV", "M*[1]::M*[2];", "JMP", "pointer", "World!MOV", "stringDFS", "from", "put", "Jump", "\"My", "user", "C*::%i", "\"loop\"JMP", "1", "M*[2]::%s", "Outputs", "output)MOV", "a", "(%?)", "mypointer", "(output", "text!\"", "C*::M*[2]>>>", "xyz", "\"mystart\"", "5", "and", "(output)MOV", "%sMOV", "M*[2]::%s;", "Copies", "(console", "Hello,", "1)", "slotsMEM", "True:", "|", "myfile.txtFLW", "5;", "%sFLR", "C*", "move", "text!;", "Output", "PNT", "10", "C*::%s>>>", "(%i)", "helloMOV", "%s]FLW", "2MOV", "3MOV", "C*::hello;", "=", "Take", "Create", "Pushes", "\"hi\\n\"4", "==", "input", "%s=%?;", "2", "\"mystart\"2", "equal", "2]FLW", "C*::M*[4]>>>", "\"xyz\"MOV", "0CMP", "value", "C*::xyz>>>", "xMOV", "C*::%s;", "World^n;", "unknown", "10;", "(str", "text!", "to", "C*::Hello,_World!>>>", "Read", "\"loop\"PNT", "[output", "called", "%s=%?", "%i", "3"]}, "6ix": {"type": "w", "code1": "Hello, World!", "code2": "goto3This line is not read.print Hello, world!end", "code3": "print Hello, World!end", "code4": "varSampleVariable=Hello WorldprintvarSampleVariableend", "code5": "inputRprint Hello, World!end", "code6": "loopThis line is read twice.loopprint Hello, World!end", "code7": "print Hello, World!end", "wordset": ["not", "twice.loopprint", "WorldprintvarSampleVariableend", "goto3This", "is", "print", "read.print", "inputRprint", "world!end", "World!end", "varSampleVariable=Hello", "loopThis", "read", "line", "Hello,", "World!"]}, "7": {"type": "c", "code1": "", "code2": "", "code3": "", "code4": "", "code5": "", "charset": ["5", "0", "6", "1", "4", "2", "3", "7"]}, "7Basic": {"type": "w", "code1": "DIM i AS INTEGERi = 0WHILE i < 5    PRINT \"Hello, World!\"    i = i + 1END WHILE", "wordset": ["WHILE", "DIM", "5", "<", "+", "PRINT", "\"Hello,", "1END", "0WHILE", "AS", "INTEGERi", "i", "World!\"", "="]}, "96": {"type": "c", "code1": "", "code2": "", "code3": "", "code4": "", "charset": [";", "-", "@", "#", "*", "_", "|", "+", "~", "n", "1", "\u00a0", "%", "2", "[", "\"", ")", "p", ",", ":", "]", "$", ">", "d", "'", ".", "3", "?", "("]}, "Unassignable": {"type": "w", "code1": "declarations integer mainloop(7)=5;integer count(7)=0;function main=activated;definitions main{  run  {    mainloop->loop;  }} mainloop{  iterate  {    count->increment(1);    count->loop;    io->output(N);  }}count{  iterate  {    io->output(1);  }}", "wordset": ["integer", "count->loop;", "mainloop->loop;", "iterate", "io->output(1);", "{", "io->output(N);", "count(7)=0;function", "main=activated;definitions", "run", "mainloop{", "}}", "declarations", "mainloop(7)=5;integer", "count->increment(1);", "main{", "}}count{"]}, "@tention!": {"type": "w", "code1": "A@=;AH'<;Ae'<;Al'<;Al'<;Ao'<;A_'<;AW'<;Ao'<;Ar'<;Al'<;Ad'<;A!'<;A!{A$>};", "code2": ":% = <({TY'=;},{%~;},{TN'=;},{T$>;})<:TY'=;:% = <({%~;},{TN'=;},{T$>;})<:%~;:% = <({T$>;},{TN'=;})<:TN'=;:% = <({TN'=;})<:T$>;", "code3": "S@=;S$'<;SS'<;S''<;S<'<;S;'<;S$'<;S@'<;S''<;S<'<;S;'<;S$'<;S''<;S<'<;S;'<;S$'<;S;'<;S''<;S<'<;S;'<;SS'<;S!'<;S{'<;S$'<;SS'<;S''<;S<'<;S;'<;S$'<;SS'<;S`'<;S<'<;S;'<;S$'<;S''<;S''<;S<'<;S;'<;S$'<;S<'<;S''<;S<'<;S;'<;S$'<;S;'<;S''<;S<'<;S;'<;SS'<;S~'<;S;'<;S}'<;S;'<;SS'<;S!'<;S{'<;S$'<;SS'<;S`'<;S<'<;S;'<;S}'<;S;'<;$S'<;$@'<;$'<;$;'<;S!{$S'<;$S`<;$''<;$<'<;$;'<;S~;};S!{$S`<;};", "code4": "\t\tD@=;\t\tT2=;\t\tQ(x{TTT*=})=;\t\t8Q^;\t\tT{D0<};                Q,;                T,;", "code5": "\t\tA(D!x-{D~}`)=;", "code6": "\t\tX0=;\t\tI(XX1+=)=;", "code7": "\t\tE(XX1-=)=;", "code8": "\t\tB(XA^XA^1+=)=;\t\tC(XA^XA^1-=)=;", "code9": "Brainfuck                   @!>                           @I^;<                           @E^;+                           @B^;-                           @C^;[]                          XA^[];.                           $XA^<;,                           &XA^>;", "wordset": [":%", "A(D!x-{D~}`)=;", "Q(x{TTT*=})=;", "B(XA^XA^1+=)=;", "<({TY'=;},{%~;},{TN'=;},{T$>;})<:TY'=;:%", "T,;", "<({T$>;},{TN'=;})<:TN'=;:%", "<({TN'=;})<:T$>;", "D@=;", "$XA^<;,", "<({%~;},{TN'=;},{T$>;})<:%~;:%", "@B^;-", "C(XA^XA^1-=)=;", "8Q^;", "T{D0<};", "I(XX1+=)=;", "@E^;+", "S@=;S$'<;SS'<;S''<;S<'<;S;'<;S$'<;S@'<;S''<;S<'<;S;'<;S$'<;S''<;S<'<;S;'<;S$'<;S;'<;S''<;S<'<;S;'<;SS'<;S!'<;S{'<;S$'<;SS'<;S''<;S<'<;S;'<;S$'<;SS'<;S`'<;S<'<;S;'<;S$'<;S''<;S''<;S<'<;S;'<;S$'<;S<'<;S''<;S<'<;S;'<;S$'<;S;'<;S''<;S<'<;S;'<;SS'<;S~'<;S;'<;S}'<;S;'<;SS'<;S!'<;S{'<;S$'<;SS'<;S`'<;S<'<;S;'<;S}'<;S;'<;$S'<;$@'<;$'<;$;'<;S!{$S'<;$S`<;$''<;$<'<;$;'<;S~;};S!{$S`<;};", "X0=;", "@I^;<", "@C^;[]", "XA^[];.", "A@=;AH'<;Ae'<;Al'<;Al'<;Ao'<;A_'<;AW'<;Ao'<;Ar'<;Al'<;Ad'<;A!'<;A!{A$>};", "T2=;", "E(XX1-=)=;", "Brainfuck", "@!>", "Q,;", "&XA^>;", "="]}, "@minor!": {"type": "c", "code1": "==<][(ascii):${32}][>==<][A--Z+++++++++++++++++++++++|a--z+++++++++++++++|a--z++++++++++++++++++|a--z++++++++++++|a--z++++]", "code2": "", "charset": ["-", "<", "a", "}", "2", ")", "{", ":", "A", "]", ">", "z", "i", "(", "_", "*", "|", "+", "[", "s", "$", "Z", "c", "3", "="]}, "`": {"type": "c", "code1": "", "charset": ["`", "9", "3", "0", "+", "8", "4", "2", "1", "7"]}, "`LML": {"type": "c", "code1": "", "code2": "", "charset": [";", "-", "+", ":", "R", "[", "("]}, "~": {"type": "c", "code1": "|\u00a0! 0 0 108 |\u00a0! 0 0 108 |\u00a0! 0 0 101 |\u00a0! 0 0 72 | { $ }", "code2": "", "charset": ["#", "|", "+", "~", "1", "}", "\u00a0", "4", "2", "7", "{", "!", "0", "\t", "8", "$", "&", "^", "3"]}, "~-Hash": {"type": "c", "code1": "# += # += ++ # += # += ++ # -=\u00a0; Calculate 101 in c3 > ++ ++ ++ ++ # += # += # += # -=\u00a0; Calculate 32 in c4 << ~ << #\u00a0; Write H >>> ~ <<< #\u00a0; Write e > += += -- < # # Write ll ++ ++ ++ # >>> # Write o and store > ~ <<<< # Write a space >> ~ < += += += += -- < # Write W >>> ~ <<< # Write o ++ ++ ++ # Write r > -= -- -- < # Write l > -= -= < # Write d >>>> ~ <<<< ++ #\u00a0; Write\u00a0! !\u00a0; End", "charset": [";", "-", "#", "<", "a", "C", "l", "4", "2", "7", "E", ">", "d", "!", "i", "t", "P", "+", "~", "\u00a0", "e", "s", "3", "p", "0", "H", "o", "W", "u", "c", "r", "1", "n", "="]}, "~-~!": {"type": "c", "code1": "", "code2": "", "code3": "", "code4": "", "charset": ["-", "*", "|", "<", "+", "/", "~", "l", "%", "[", ":", "8", "$", ">", "]", "&", "'", "r", "="]}, "~ATH": {"type": "w", "code1": "   ~ATH(THIS) {      //Additional graves...    } EXECUTE(NULL);    THIS.DIE(); ", "code2": "EXECUTE(Hello_World.py);", "code3": "~ATH(A){  // More things to do (additional graves) go here.}EXECUTE(NULL);", "code4": "bifurcate THIS[THIS1,THIS2];bifurcate THIS2[THIS3,THIS4];", "code5": "[THIS1, [THIS3, THIS4]].DIE();", "code6": "  COLOR: means apply this color until the end of the line.  COLOR/foo means the variable foo in the color COLOR, but without overriding the COLOR: directives.", "code7": "  BLACK: bifurcate THIS[RED/THIS, BLUE/THIS]; // Split the program into two parts.  RED: ~ATH(BLUE/THIS) { // Until blue program terminates:    BLUE:~ATH(RED/THIS) { // Until red program terminates:  RED: } EXECUTE(NULL); // ~ATH(blue program)    BLUE: } EXECUTE(NULL); // ~ATH(red program)  BLACK: [RED/THIS, BLUE/THIS].DIE();", "code8": "~ATH(!U2) {", "code9": "    } EXECUTE(~ATH(THIS){}EXECUTE(NULL));", "wordset": ["~ATH(THIS)", "Until", "}", "graves...", "THIS4]].DIE();", "Split", "in", "overriding", "~ATH(red", "BLUE/THIS].DIE();", "RED:", "{", "the", "here.}EXECUTE(NULL);", "color", "THIS.DIE();", "things", "EXECUTE(~ATH(THIS){}EXECUTE(NULL));", "until", "of", "EXECUTE(Hello_World.py);", "THIS[THIS1,THIS2];bifurcate", "but", "[THIS3,", "two", "red", "COLOR:", "~ATH(BLUE/THIS)", "THIS[RED/THIS,", "BLUE:~ATH(RED/THIS)", "blue", "program", "variable", "means", "//Additional", "this", "foo", "[RED/THIS,", "bifurcate", "COLOR/foo", "~ATH(!U2)", "BLUE/THIS];", "graves)", "BLACK:", "~ATH(A){", "do", "(additional", "BLUE:", "directives.", "[THIS1,", "end", "~ATH(blue", "terminates:", "parts.", "line.", "program)", "EXECUTE(NULL);", "into", "//", "COLOR,", "without", "to", "THIS2[THIS3,THIS4];", "apply", "More", "go"]}, "~English": {"type": "w", "code1": "Display \"Hello world!\" and a newline.Stop the program.", "code2": "Create a variable named name.Display \"Enter your name: \" and a newline.Vary the value of name by call the function \"ask\".Make another variable called age.Display \"Enter your age: \" and a newline.Set the value of age to call function \"to number\" with call another function \"ask\".While the age is smaller than 0 do:    If the age equals -100 then:        Display \"That seems highly unlikely...\" and a newline.    That's it.    Display \"Enter a valid age, \" and the name.    Display \":\" and a newline.    Set the value of age to call function \"to number\" with call another function \"ask\".That's all.Display \"Your name is \", the name, \".\" and a newline.Show \"Your age is \", the age, \".\" and another newline.If the name equals \"World\" then:    Display \"Hello World!\" and a newline.    Display another newline.That's all.Else, then:    Display \"Now this is no longer a 'Hello, world!' program...\" and a newline.That's all.If the age is larger than 100 or the age equals 100 then:    Display \"You are very old.\" and a newline.    Display another newline.That's all.Otherwise, then:    Display \"You are less than 100 years old.\" and a newline.That's it.Show \"Bye!\" and a newline.Stop this program.", "wordset": ["\"Your", "all.Else,", "newline.That's", "a", "your", "is", "world!'", "\"ask\".That's", "newline.Stop", "the", "it.", "all.Otherwise,", "and", "function", "by", "age,", "old.\"", "\"Enter", "\"World\"", "age.Display", "If", "newline.Show", "name.Display", "of", "or", "newline.", "age:", "\",", "\"ask\".Make", "call", "\"Bye!\"", "World!\"", "name.", "seems", "\"You", "name,", "all.If", "\"to", "program.", "\":\"", "variable", "name:", "than", "That's", "this", "Create", "years", "\".\"", "highly", "Set", "very", "number\"", "\"", "-100", "Display", "age", "newline.Set", "smaller", "another", "longer", "unlikely...\"", "all.Display", "value", "100", "with", "newline.If", "program...\"", "valid", "do:", "less", "no", "'Hello,", "to", "named", "are", "larger", "newline.Vary", "0", "called", "\"That", "\"Now", "\"Hello", "it.Show", "equals", "\"ask\".While", "name", "then:", "world!\""]}, "\u0399\u03a7\u0398\u03a5\u03a3": {"type": "c", "code1": "\u03b9\u03a5\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b8\u03b9\u03b8\u03a5\u03a7\u03b9\u03b9\u03b8\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03a5", "code2": "\u03b9\u03b9\u03b9\u03b8\u03f2\u03a5", "code3": "", "code4": "", "code5": "\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03a5\u037c\u03b8\u03c7\u03c7\u03a5\u03b9\u03b9\u03b9\u03a5\u03a5\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03a5\u03a7\u0398\u0399\u03f9\u03a7\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03a5\u037c\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03a5\u037c\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03a5\u037c\u03b9\u03b8\u03c7\u03c7\u03a5\u037c\u03b8\u03c7\u03c7\u03c7\u03a5\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03a5\u03a5\u03a7\u0398\u0399\u03c2\u037c\u03c7\u03b8\u03b9\u03b9\u03b9\u03a5\u037c\u03b8\u03c7\u03c7\u03c7\u03a5\u037c\u03b8\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03a5\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b8\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u03c7\u03a5\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b8\u03b9\u03b8\u03a5\u03a7\u03b9\u03b9\u03b9\u03b8\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03a5\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b8\u03c7\u03c7\u03b8\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b8\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b8\u03b9\u03b8\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b8\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u03a5\u03a7\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b8\u03b9\u03b8\u03b9\u03b9\u03b9\u03b9\u03b9\u03a5\u03a7\u03b9\u03b9\u03b9\u03b8\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b8\u03b9\u03b8\u03c7\u03c7\u03c7\u03a5\u03a7\u03b9\u03b9\u03b9\u03b8\u03b9\u03b9\u03b8\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u03c7\u03c7\u03c7\u03a5\u03b9\u03b9\u03b9\u03b9\u03b9\u03b9\u03a5\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u037c\u03b8\u03a5\u03a7\u0398\u0399\u03a3\u03a7\u03b9\u03b9\u03b9\u03b8\u03b9\u03b8\u03c7\ud835\udfbb\u0398\u0399\ud835\udfbc\u03c7\u03b9\u03b9\u0398\u0399\u03f2\u03b9\u03b9\u03b9\u03b8\u03c7\u03c7\u03b8\u03c7\u03c7\u03c7\u03c7\u03c7\u03a5\u037c\u03a5\u0398\u0399\ud835\udf47\u03b9\u03b9\u03b9\u03b8\u03c7\u03c7\u03b8\u03c7\u03c7\u03c7\u03c7\u03c7\u03b9\u03b9\u03a5\u037c\u03a5\u0398\u0399\u2211\u03a3\u03c5\u03c3\u03f9\u03f2\u03a3\u03c5\u03c3\ud835\udf47\u03c2\u03f2\u03a3\u03c7\u03c7\ud835\udfbc\ud835\udfbc\u03c7\u03c5\u03c3\u03f9\ud835\udf47\u037c\u03a5\u0399\ud835\udfbb\u03c7\u0398\u2211\u0398\u2211\ud835\udfbb", "charset": ["\u03b9", "\u03f2", "\u03db", "\u037c", "\u03c5", "\u0399", "\u03a5", "\u03c3", "\u03f9", "\u2211", "\ud835\udf47", "\ud835\udfbb", "s", "\u03b8", "\u03a3", "\u03a7", "\u03c2", "\ud835\udfbc", "\u03c7", "\u0398", "d", "o", "i"]}, "\u039cCurse": {"type": "c", "code1": "0!_]]]", "code2": "RP0AS(P2)(P0P2)(AS(AS(C))P1)AS(C)))AS(C))", "charset": ["@", "_", "P", "+", "C", "R", "1", "2", "[", ")", "0", "A", "]", ">", "S", "!", "(", "="]}, "\u042e\u14c2\uace7\u2394": {"type": "c", "code1": "", "charset": ["\u204c", "\u2632", "\u00ab", "\u2637", "\u044c", "\u201d", "\u2631", "\u2636", "\u2630", "\u2302", "\u201c", "\u0964", "\u263a", "\u204d", "\u2635", "\u0430", "\u2634", "\u0441", "\u240a", "\u2639", "\u0442", "\u043f", "\u0438", "\u00bb"]}, "\u05e2\u05e8\u05d9\u05de\u05d4": {"type": "c", "code1": "", "code2": "", "charset": ["\u05db", "-", "\u05e6", "<", "a", "R", "6", "F", "4", "\u05d9", "\u05dc", ")", ":", "\u05ea", "\u05d7", "]", "i", "(", "t", "\u05d3", "\u05e0", "\u05e9", "+", "1", "[", "\u05e3", "\u05e4", "0", "W", "8", "u", "\u05d5", "\u05d4", "\u05de", "c", "\u05d8", "3", "n"]}, "\u0642\u0644\u0628": {"type": "c", "code1": "", "code2": "))))))(\u0642\u0648\u0644 (\u0641\u064a\u0628\u0648\u0646\u0627\u062a\u0634\u064a \u0661\u0660))", "code3": " ))))", "code4": "        ((\u062d\u062f\u062f \u0646\u0640\u0640\u0640\u0640\u0635\u0641 (\u0642\u0633\u0645 \u0646 \u0662))                   (\u0625\u0630\u0627 (\u064a\u0633\u0627\u0648\u064a\u061f \u0646\u0640\u0635\u0641                           (\u0623\u0631\u0636  \u0646\u0640\u0635\u0641))                        (\u0627\u0644\u0643\u0648\u0644\u0627\u062a\u0640\u0640\u0632 \u0646\u0640\u0635\u0641)                     (\u0627\u0644\u0643\u0648\u0644\u0627\u062a\u0640\u0640\u0632 (\u062c\u0645\u0639 \u0661                                 (\u0636\u0631\u0628 \u0646 \u0663))))))))", "code5": "", "charset": ["\u0634", "\u0639", "\u0646", "\u0630", "\u0623", "\u0648", "\u0640", "\u0661", "\u0643", "\"", ")", "\u0637", "\u0645", "\u063a", "\u0662", "\u062a", "\u062c", "\u202b", "\u0628", "\u0633", "\u0635", "\u0627", "\u061f", "!", "\u0636", "(", "\u0663", "\u064a", "\u0644", "\u0641", "\u0642", "\u062f", "\u0625", "\u062d", "\u0632", "\u0660", "\u0665", "\u0631"]}, "\u16b1\u16a2\u16be\u16c5\u16e6": {"type": "c", "code1": "", "code2": "", "code3": "", "charset": ["\u16e7", "\u16b1", "\u0357", "\u16ec", "\u030a", "\u16cc", "\u16a6", "\u16b9", "\u16d0", "\u16ad", "\u0333", "\u16da", "\u0339", "\u0335", "\u16cb", "\u16d9", "\u16a2", "\u16b4", "\u16cd", "\u033f", "\u16c1"]}, "\u5f00\uff1f\u5173\uff01": {"type": "c", "code1": "", "charset": ["<", ":", "+", "\u6e9c", "]", "\u2190", ">", "\u00a0", "\u56de", "\u53d8", "\u2192", "["]}, "\ud83c\udd92": {"type": "c", "code1": "", "code2": "", "code3": "", "code4": "", "code5": "\ufe0f\u20e3", "code6": "", "charset": ["\ud83c\udf4b", "\ud83d\udc1a", "#", "\ud83e\udd64", "\ud83c\udf9b", "\ud83d\udd24", "2", "\u20e3", "\ud83c\udf3c", "\u2753", "5", "\ud83c\udfed", "\ud83d\udd23", "\ud83d\udcce", "\u2796", "\ud83c\udd95", "\ud83d\uded1", "\u26be", "\u26bd", "\ud83c\udfc0", "\ud83c\udfc8", "\ud83d\udd35", "\u2696", "\ud83c\udf6f", "\ud83d\udd87", "3", "0", "\ud83d\udc1d", "\ud83d\udcac", "\ud83c\udd93", "\ufe0f", "\ud83d\udd34", "\ud83d\udcc8", "\ud83d\udd02", "\u2716", "\u23ea", "\u2795", "1", "\u25c0"]}, "\u018e\u2183\u0418A\u042fT": {"type": "w", "code1": "main(x):  sub(shr(x, 8) + sub(x, shl(shr(x, 8), 8)), 48)sub(x + 1, y + 1): sub(x, y)sub(x + 1, 0): x + 1sub(0, y): 0shl(x, y + 1): shl(shl(x, y))shl(x, 0): xshl(x): x + xshr(x, y + 1): shr(shr(x, y))shr(x, 0): xshr(x + 2): shr(x) + 1shr(1): 0shr(0): 0", "code2": "sub(x + 1, y + 1): sub(x, y)sub(x + 1, 0): x + 1sub(0, y): 0", "code3": "dec(x + 1): xdec(0): 0", "code4": "add(x, y): x + y", "wordset": ["y))shl(x,", "xdec(0):", "8),", "y", "1,", "shr(x)", "shl(shr(x,", "8)),", "sub(shr(x,", "main(x):", "sub(x", "dec(x", "1sub(0,", "y):", "48)sub(x", "shl(shl(x,", "0shr(0):", "+", "y)sub(x", "sub(x,", "2):", "1):", "y))shr(x,", "xshr(x,", "xshl(x):", "0shl(x,", "add(x,", "x", "0", "1shr(1):", "8)", "0):", "shr(shr(x,", "xshr(x"]}, "(1)_Grace_sent_you_a_message": {"type": "c", "code1": "", "charset": ["-", "5", "<", ",", "+", "[", "1", "]", ">", ".", "2", "3"]}, "A.R.T.I.C.L.E.": {"type": "w", "code1": " Hi. Now you will be asked to input a char here in the console. That inputed char will be used to print a output message in the console. Now, the program execution will jump to the message at the start, a loop is created. Jump program execution to Hi.", "code2": " mainloop. input f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13. output f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14. jump_to_start f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15 f16. f f f f mainloop.", "code3": " get_input f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13. push push push push push. push push push push push. zero_label. dec f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12. n n n n n. n n n n n n1. loop_until_0 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15 f16 f17 f18. f f f f zero_label. add_0_to_compare f2 f3 f4 f5 f6 f7 f8 f9 f10 f11. n n n n n n1 n2 n3. n n n n n. pop_and_cmp f2 f3 f4 f5 f6 f7 f8. bnoc_0 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15 f16 f17. f f f f print_0. zero_label2. dec f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12. n n n n n. n n n n n n1. loop_until_0 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15 f16 f17 f18. f f f f zero_label2. add_1_to_compare f2 f3 f4 f5 f6 f7 f8 f9 f10 f11. n n n n n n1 n2 n3. n n n n n n1. pop_and_cmp f2 f3 f4 f5 f6 f7 f8. bnoc_1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15 f16 f17. f f f f print_1. end_if_none f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15. f f f f end. print_1. print1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14. loop f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15 f16. f f f f print_1. print_0. zero_label3. dec f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12. n n n n n. n n n n n n1. loop_until_0 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15 f16 f17 f18. f f f f zero_label3. add_0_to_print f2 f3 f4 f5 f6 f7 f8 f9 f10 f11. n n n n n n1 n2 n3. n n n n n. print0 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14. get_input f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13.  end.", "wordset": ["f14.", "mainloop.", "n1.", "used", "a", "f6", "get_input", "zero_label2.", "is", "f", "in", "Now,", "f16.", "bnoc_0", "f13.", "f14", "add_0_to_compare", "add_0_to_print", "the", "add_1_to_compare", "output", "loop", "you", "print_0.", "print0", "print_1.", "f5", "f15", "at", "loop_until_0", "That", "execution", "f11.", "bnoc_1", "dec", "jump_to_start", "f17.", "asked", "zero_label.", "n2", "here", "f8", "print1", "start,", "f11", "Now", "n", "program", "push", "created.", "end_if_none", "end.", "f8.", "input", "f4", "n1", "will", "print", "f17", "char", "be", "n.", "f10", "f7", "message", "jump", "f3", "f15.", "f12", "zero_label3.", "pop_and_cmp", "push.", "console.", "to", "inputed", "f13", "Hi.", "f2", "Jump", "f9", "f12.", "f18.", "n3.", "f16"]}, "AAAAAAAAAAAAAA!!!!": {"type": "c", "code1": "A AAAA AA! AAA A AAA AAAA! AAA A AA AAAA AAA, AA A, AAA AAA, AA A AA A AA A,AAA AAA, AA A AA A! AAAA A AAA!", "code2": "", "code3": "", "code4": "", "charset": [",", "A", "!", "n"]}, "Argh!": {"type": "c", "code1": "", "charset": ["h", "*", "p", ",", "P", "l", "w", "d", "e", "j", "o", "f", "r", "q", "s"]}, "ABC": {"type": "c", "code1": "aaacaaaaaaaccaaacnaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacbbbbbbbbbbbbcaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacaaaaaaaaaaaaaaaaaaaaaaaacaaacbbbbbbcbbbbbbbbcnaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac", "code2": "cnaaaaaaaaarcnaaaaaaaaarc", "code3": "", "code4": "", "charset": ["a", "l", "$", "b", "d", "c", "r", "n"]}, "ABCDE": {"type": "c", "code1": "ACGAAC", "charset": ["E", "G", "B", "C", "A", "H"]}}